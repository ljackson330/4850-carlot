name: Carlot CI
on:
  push:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Create venv and install deps
        run: |
          python -m venv venv
          venv/bin/pip install -r requirements.txt
          venv/bin/pip install pylint coverage
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-env
          path: |
            venv/
            requirements.txt
            *.py
  
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-env
      
      - name: Fix venv permissions
        run: chmod -R 755 venv/bin
      
      - name: Run Pylint
        run: |
          find . -name "*.py" -not -path "./venv/*" > pylint_files.txt
          venv/bin/pylint --fail-under=5 $(cat pylint_files.txt)
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-env
      
      - name: Fix venv permissions
        run: chmod -R 755 venv/bin
      
      - name: Create test directories
        run: |
          mkdir -p test-reports
          mkdir -p api-test-reports
      
      - name: Run Tests with Coverage
        run: |
          # Find and run test files
          for file in $(find . -name "test_*.py" -not -path "./venv/*"); do
            venv/bin/coverage run --append --omit "*/site-packages/*,*/dist-packages/*,venv/*" "$file"
          done
          
          # Generate coverage report
          venv/bin/coverage report
  
  zip:
    name: Zip
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-env
          path: source
      
      - name: Create zip file
        run: |
          cd source
          zip -r ../app.zip *.py
      
      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: carlot-build
          path: app.zip
